{"version":3,"sources":["Utilities/SemanticLocationHistory lazy /^/.//.*$/ groupOptions: {} namespace object","Sections/HomeSection/index.tsx","Utilities/json-helper.ts","Sections/CreateSection/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","HomeSection","JSONHelper","obj","key","list","Array","i","concat","findValuesHelper","push","children","length","DefaultIcon","Leaflet","icon","iconUrl","shadowUrl","iconShadow","iconRetinaUrl","iconRetina","Marker","prototype","options","CreateSection","useState","semanticFiles","setSemanticFiles","semantics","setSemantics","setHistoryFiles","useEffect","loadSemantic","file","a","async","console","log","name","fetch","URL","createObjectURL","response","text","textContent","testTimestamp","testJson","JSON","parse","timestamps","error","testDate","Date","parseInt","testMonth","getUTCMonth","testYear","getUTCFullYear","specialName","toLocaleString","month","toUpperCase","dynamicImport","converted","Convert","activities","results","objects","timelineObjects","activitySegment","undefined","startLoc","startLocation","endLoc","endLocation","latitudeE7","longitudeE7","startLat","startLong","endLat","endLong","confidence","Polyline","positions","lat","lng","Popup","activity","activityType","join","createActivityDisplays","Grid","container","spacing","item","Button","variant","component","type","multiple","accept","style","display","onChange","event","files","currentTarget","onClick","newSemantics","semantic","Map","center","zoom","height","width","TileLayer","url","attribution","App","className","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wGAAA,IAAIA,EAAM,CACT,8CAA+C,CAC9C,GACA,GAED,iDAAkD,CACjD,GACA,GAED,gDAAiD,CAChD,GACA,GAED,mDAAoD,CACnD,GACA,GAED,4CAA6C,CAC5C,GACA,GAED,+CAAgD,CAC/C,GACA,GAED,gDAAiD,CAChD,GACA,GAED,mDAAoD,CACnD,GACA,GAED,+CAAgD,CAC/C,GACA,GAED,kDAAmD,CAClD,GACA,GAED,iDAAkD,CACjD,GACA,GAED,oDAAqD,CACpD,GACA,GAED,8CAA+C,CAC9C,GACA,GAED,iDAAkD,CACjD,GACA,GAED,gDAAiD,CAChD,GACA,GAED,mDAAoD,CACnD,GACA,GAED,+CAAgD,CAC/C,GACA,GAED,kDAAmD,CAClD,GACA,GAED,iDAAkD,CACjD,GACA,GAED,oDAAqD,CACpD,GACA,GAED,6CAA8C,CAC7C,GACA,IAED,gDAAiD,CAChD,GACA,IAED,8CAA+C,CAC9C,GACA,IAED,iDAAkD,CACjD,GACA,IAED,gDAAiD,CAChD,GACA,IAED,mDAAoD,CACnD,GACA,IAED,gDAAiD,CAChD,GACA,IAED,mDAAoD,CACnD,GACA,IAED,+CAAgD,CAC/C,GACA,IAED,kDAAmD,CAClD,GACA,IAED,4CAA6C,CAC5C,GACA,IAED,+CAAgD,CAC/C,GACA,IAED,4CAA6C,CAC5C,GACA,IAED,+CAAgD,CAC/C,GACA,IAED,6CAA8C,CAC7C,GACA,IAED,gDAAiD,CAChD,GACA,IAED,2CAA4C,CAC3C,GACA,IAED,8CAA+C,CAC9C,GACA,IAED,gDAAiD,CAChD,GACA,IAED,mDAAoD,CACnD,GACA,IAED,+CAAgD,CAC/C,GACA,IAED,kDAAmD,CAClD,GACA,IAED,iDAAkD,CACjD,GACA,IAED,oDAAqD,CACpD,GACA,IAED,6CAA8C,CAC7C,GACA,IAED,gDAAiD,CAChD,GACA,IAED,8CAA+C,CAC9C,GACA,IAED,iDAAkD,CACjD,GACA,IAED,gDAAiD,CAChD,GACA,IAED,mDAAoD,CACnD,GACA,IAED,gDAAiD,CAChD,GACA,IAED,mDAAo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","file":"static/js/main.dc8dc666.chunk.js","sourcesContent":["var map = {\n\t\"./2015/semantic-location-history-AUGUST2015\": [\n\t\t42,\n\t\t0\n\t],\n\t\"./2015/semantic-location-history-AUGUST2015.ts\": [\n\t\t42,\n\t\t0\n\t],\n\t\"./2015/semantic-location-history-DECEMBER2015\": [\n\t\t43,\n\t\t1\n\t],\n\t\"./2015/semantic-location-history-DECEMBER2015.ts\": [\n\t\t43,\n\t\t1\n\t],\n\t\"./2015/semantic-location-history-JULY2015\": [\n\t\t44,\n\t\t2\n\t],\n\t\"./2015/semantic-location-history-JULY2015.ts\": [\n\t\t44,\n\t\t2\n\t],\n\t\"./2015/semantic-location-history-NOVEMBER2015\": [\n\t\t45,\n\t\t3\n\t],\n\t\"./2015/semantic-location-history-NOVEMBER2015.ts\": [\n\t\t45,\n\t\t3\n\t],\n\t\"./2015/semantic-location-history-OCTOBER2015\": [\n\t\t46,\n\t\t4\n\t],\n\t\"./2015/semantic-location-history-OCTOBER2015.ts\": [\n\t\t46,\n\t\t4\n\t],\n\t\"./2015/semantic-location-history-SEPTEMBER2015\": [\n\t\t47,\n\t\t5\n\t],\n\t\"./2015/semantic-location-history-SEPTEMBER2015.ts\": [\n\t\t47,\n\t\t5\n\t],\n\t\"./2016/semantic-location-history-AUGUST2016\": [\n\t\t48,\n\t\t6\n\t],\n\t\"./2016/semantic-location-history-AUGUST2016.ts\": [\n\t\t48,\n\t\t6\n\t],\n\t\"./2016/semantic-location-history-NOVEMBER2016\": [\n\t\t49,\n\t\t7\n\t],\n\t\"./2016/semantic-location-history-NOVEMBER2016.ts\": [\n\t\t49,\n\t\t7\n\t],\n\t\"./2016/semantic-location-history-OCTOBER2016\": [\n\t\t50,\n\t\t8\n\t],\n\t\"./2016/semantic-location-history-OCTOBER2016.ts\": [\n\t\t50,\n\t\t8\n\t],\n\t\"./2016/semantic-location-history-SEPTEMBER2016\": [\n\t\t51,\n\t\t9\n\t],\n\t\"./2016/semantic-location-history-SEPTEMBER2016.ts\": [\n\t\t51,\n\t\t9\n\t],\n\t\"./2017/semantic-location-history-APRIL2017\": [\n\t\t52,\n\t\t10\n\t],\n\t\"./2017/semantic-location-history-APRIL2017.ts\": [\n\t\t52,\n\t\t10\n\t],\n\t\"./2017/semantic-location-history-AUGUST2017\": [\n\t\t53,\n\t\t11\n\t],\n\t\"./2017/semantic-location-history-AUGUST2017.ts\": [\n\t\t53,\n\t\t11\n\t],\n\t\"./2017/semantic-location-history-DECEMBER2017\": [\n\t\t54,\n\t\t12\n\t],\n\t\"./2017/semantic-location-history-DECEMBER2017.ts\": [\n\t\t54,\n\t\t12\n\t],\n\t\"./2017/semantic-location-history-FEBRUARY2017\": [\n\t\t55,\n\t\t13\n\t],\n\t\"./2017/semantic-location-history-FEBRUARY2017.ts\": [\n\t\t55,\n\t\t13\n\t],\n\t\"./2017/semantic-location-history-JANUARY2017\": [\n\t\t56,\n\t\t14\n\t],\n\t\"./2017/semantic-location-history-JANUARY2017.ts\": [\n\t\t56,\n\t\t14\n\t],\n\t\"./2017/semantic-location-history-JULY2017\": [\n\t\t57,\n\t\t15\n\t],\n\t\"./2017/semantic-location-history-JULY2017.ts\": [\n\t\t57,\n\t\t15\n\t],\n\t\"./2017/semantic-location-history-JUNE2017\": [\n\t\t58,\n\t\t16\n\t],\n\t\"./2017/semantic-location-history-JUNE2017.ts\": [\n\t\t58,\n\t\t16\n\t],\n\t\"./2017/semantic-location-history-MARCH2017\": [\n\t\t59,\n\t\t17\n\t],\n\t\"./2017/semantic-location-history-MARCH2017.ts\": [\n\t\t59,\n\t\t17\n\t],\n\t\"./2017/semantic-location-history-MAY2017\": [\n\t\t60,\n\t\t18\n\t],\n\t\"./2017/semantic-location-history-MAY2017.ts\": [\n\t\t60,\n\t\t18\n\t],\n\t\"./2017/semantic-location-history-NOVEMBER2017\": [\n\t\t61,\n\t\t19\n\t],\n\t\"./2017/semantic-location-history-NOVEMBER2017.ts\": [\n\t\t61,\n\t\t19\n\t],\n\t\"./2017/semantic-location-history-OCTOBER2017\": [\n\t\t62,\n\t\t20\n\t],\n\t\"./2017/semantic-location-history-OCTOBER2017.ts\": [\n\t\t62,\n\t\t20\n\t],\n\t\"./2017/semantic-location-history-SEPTEMBER2017\": [\n\t\t63,\n\t\t21\n\t],\n\t\"./2017/semantic-location-history-SEPTEMBER2017.ts\": [\n\t\t63,\n\t\t21\n\t],\n\t\"./2018/semantic-location-history-APRIL2018\": [\n\t\t64,\n\t\t22\n\t],\n\t\"./2018/semantic-location-history-APRIL2018.ts\": [\n\t\t64,\n\t\t22\n\t],\n\t\"./2018/semantic-location-history-AUGUST2018\": [\n\t\t65,\n\t\t23\n\t],\n\t\"./2018/semantic-location-history-AUGUST2018.ts\": [\n\t\t65,\n\t\t23\n\t],\n\t\"./2018/semantic-location-history-DECEMBER2018\": [\n\t\t66,\n\t\t24\n\t],\n\t\"./2018/semantic-location-history-DECEMBER2018.ts\": [\n\t\t66,\n\t\t24\n\t],\n\t\"./2018/semantic-location-history-FEBRUARY2018\": [\n\t\t67,\n\t\t25\n\t],\n\t\"./2018/semantic-location-history-FEBRUARY2018.ts\": [\n\t\t67,\n\t\t25\n\t],\n\t\"./2018/semantic-location-history-JANUARY2018\": [\n\t\t68,\n\t\t26\n\t],\n\t\"./2018/semantic-location-history-JANUARY2018.ts\": [\n\t\t68,\n\t\t26\n\t],\n\t\"./2018/semantic-location-history-JULY2018\": [\n\t\t69,\n\t\t27\n\t],\n\t\"./2018/semantic-location-history-JULY2018.ts\": [\n\t\t69,\n\t\t27\n\t],\n\t\"./2018/semantic-location-history-JUNE2018\": [\n\t\t70,\n\t\t28\n\t],\n\t\"./2018/semantic-location-history-JUNE2018.ts\": [\n\t\t70,\n\t\t28\n\t],\n\t\"./2018/semantic-location-history-MARCH2018\": [\n\t\t71,\n\t\t29\n\t],\n\t\"./2018/semantic-location-history-MARCH2018.ts\": [\n\t\t71,\n\t\t29\n\t],\n\t\"./2018/semantic-location-history-MAY2018\": [\n\t\t72,\n\t\t30\n\t],\n\t\"./2018/semantic-location-history-MAY2018.ts\": [\n\t\t72,\n\t\t30\n\t],\n\t\"./2018/semantic-location-history-NOVEMBER2018\": [\n\t\t73,\n\t\t31\n\t],\n\t\"./2018/semantic-location-history-NOVEMBER2018.ts\": [\n\t\t73,\n\t\t31\n\t],\n\t\"./2018/semantic-location-history-OCTOBER2018\": [\n\t\t74,\n\t\t32\n\t],\n\t\"./2018/semantic-location-history-OCTOBER2018.ts\": [\n\t\t74,\n\t\t32\n\t],\n\t\"./2018/semantic-location-history-SEPTEMBER2018\": [\n\t\t75,\n\t\t33\n\t],\n\t\"./2018/semantic-location-history-SEPTEMBER2018.ts\": [\n\t\t75,\n\t\t33\n\t],\n\t\"./2019/semantic-location-history-APRIL2019\": [\n\t\t76,\n\t\t34\n\t],\n\t\"./2019/semantic-location-history-APRIL2019.ts\": [\n\t\t76,\n\t\t34\n\t],\n\t\"./2019/semantic-location-history-AUGUST2019\": [\n\t\t77,\n\t\t35\n\t],\n\t\"./2019/semantic-location-history-AUGUST2019.ts\": [\n\t\t77,\n\t\t35\n\t],\n\t\"./2019/semantic-location-history-DECEMBER2019\": [\n\t\t78,\n\t\t36\n\t],\n\t\"./2019/semantic-location-history-DECEMBER2019.ts\": [\n\t\t78,\n\t\t36\n\t],\n\t\"./2019/semantic-location-history-FEBRUARY2019\": [\n\t\t79,\n\t\t37\n\t],\n\t\"./2019/semantic-location-history-FEBRUARY2019.ts\": [\n\t\t79,\n\t\t37\n\t],\n\t\"./2019/semantic-location-history-JANUARY2019\": [\n\t\t80,\n\t\t38\n\t],\n\t\"./2019/semantic-location-history-JANUARY2019.ts\": [\n\t\t80,\n\t\t38\n\t],\n\t\"./2019/semantic-location-history-JULY2019\": [\n\t\t81,\n\t\t39\n\t],\n\t\"./2019/semantic-location-history-JULY2019.ts\": [\n\t\t81,\n\t\t39\n\t],\n\t\"./2019/semantic-location-history-JUNE2019\": [\n\t\t82,\n\t\t40\n\t],\n\t\"./2019/semantic-location-history-JUNE2019.ts\": [\n\t\t82,\n\t\t40\n\t],\n\t\"./2019/semantic-location-history-MARCH2019\": [\n\t\t83,\n\t\t41\n\t],\n\t\"./2019/semantic-location-history-MARCH2019.ts\": [\n\t\t83,\n\t\t41\n\t],\n\t\"./2019/semantic-location-history-MAY2019\": [\n\t\t84,\n\t\t42\n\t],\n\t\"./2019/semantic-location-history-MAY2019.ts\": [\n\t\t84,\n\t\t42\n\t],\n\t\"./2019/semantic-location-history-NOVEMBER2019\": [\n\t\t85,\n\t\t43\n\t],\n\t\"./2019/semantic-location-history-NOVEMBER2019.ts\": [\n\t\t85,\n\t\t43\n\t],\n\t\"./2019/semantic-location-history-OCTOBER2019\": [\n\t\t86,\n\t\t44\n\t],\n\t\"./2019/semantic-location-history-OCTOBER2019.ts\": [\n\t\t86,\n\t\t44\n\t],\n\t\"./2019/semantic-location-history-SEPTEMBER2019\": [\n\t\t87,\n\t\t45\n\t],\n\t\"./2019/semantic-location-history-SEPTEMBER2019.ts\": [\n\t\t87,\n\t\t45\n\t],\n\t\"./2020/semantic-location-history-JANUARY2020\": [\n\t\t88,\n\t\t46\n\t],\n\t\"./2020/semantic-location-history-JANUARY2020.ts\": [\n\t\t88,\n\t\t46\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 100;\nmodule.exports = webpackAsyncContext;","import React from 'react';\n\nexport const HomeSection = () => {\n  return (\n    <p>Home</p>\n  );\n}\n","export class JSONHelper {\n\n    public static findValuesHelper(obj: any, key: string){\n        let list: any[] = [];\n        if (!obj) return list;\n        if (obj instanceof Array) {\n            for (var i in obj) {\n                list = list.concat(JSONHelper.findValuesHelper(obj[i], key));\n            }\n            return list;\n        }\n        if (obj[key]) list.push(obj[key]);\n\n        if ((typeof obj == \"object\") && (obj !== null)) {\n            let children = Object.keys(obj);\n            if (children.length > 0) {\n                for (let i = 0; i < children.length; i++) {\n                    list = list.concat(JSONHelper.findValuesHelper(obj[children[i]], key));\n                }\n            }\n        }\n        return list;\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Button, Box, Grid, Paper } from \"@material-ui/core\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet/dist/leaflet\";\nimport Leaflet from \"leaflet\";\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconRetina from 'leaflet/dist/images/marker-icon-2x.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport {\n  Map,\n  TileLayer,\n  Marker,\n  CircleMarker,\n  Popup,\n  Polyline,\n} from \"react-leaflet\";\n\nimport { JSONHelper } from \"../../Utilities/json-helper\";\n\nlet DefaultIcon = Leaflet.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconRetinaUrl: iconRetina,\n});\nLeaflet.Marker.prototype.options.icon = DefaultIcon;\n\nexport const CreateSection: React.FC = () => {\n\n  const [semanticFiles, setSemanticFiles] = useState<FileList | null>(null);\n  const [semantics, setSemantics] = useState<any[]>([]);\n\n  const [historyFiles, setHistoryFiles] = useState<FileList | null>(null);\n  const [histories, setHistories] = useState<any[]>([]);\n\n  useEffect(() => {\n  }, []);\n\n  const parse = async (): Promise<void> => {\n    if (semanticFiles === undefined || semanticFiles === null || semanticFiles.length <= 0) {\n      console.error(\"You must select files first.\");\n      return;\n    }\n\n    setSemantics([]);\n    let newSemantics = [];\n    for (let i = 0; i < semanticFiles.length; i++) {\n      const file = semanticFiles[i];\n      const semantic = await loadSemantic(file);\n      newSemantics.push(semantic);\n    }\n    setSemantics(newSemantics);\n  };\n\n  const loadSemantic = async (file: File): Promise<any> => {\n    console.log(`Loading ${file.name}...`);\n    const textContent: string = await fetch(URL.createObjectURL(file)).then(response => response.text());\n\n    let testTimestamp = \"\";\n    {\n      const testJson = JSON.parse(textContent);\n      const timestamps = JSONHelper.findValuesHelper(testJson, \"startTimestampMs\");\n      if (timestamps.length <= 0) {\n        console.error(\"Couldn't find any timestamps to match file format from.\");\n        return;\n      }\n      testTimestamp = timestamps[0];\n    }\n    const testDate = new Date(parseInt(testTimestamp));\n    const testMonth = testDate.getUTCMonth();\n    const testYear = testDate.getUTCFullYear();\n\n    if (testYear === 2015 && testMonth < 6) {\n      console.error(`Files from before July 2015 are not yet supported.`);\n      return;\n    }\n\n    const specialName = `${testDate.toLocaleString('default', { month: 'long' })}${testYear}`.toUpperCase();\n    const dynamicImport = await import(`../../Utilities/SemanticLocationHistory/${testYear}/semantic-location-history-${specialName}`);\n    const converted = dynamicImport.Convert[`toSemanticLocationHistory${specialName}`](textContent);\n\n    console.log(`Loaded ${file.name}!`);\n    return converted;\n  };\n\n  const createActivityDisplays = () => {\n    let results = [];\n    for (const semantic of semantics) {\n      const objects = semantic.timelineObjects;\n      for (const obj of objects) {\n        const activitySegment = obj.activitySegment;\n        if (activitySegment === undefined) continue;\n        const startLoc = activitySegment.startLocation;\n        const endLoc = activitySegment.endLocation;\n        if (startLoc === undefined || endLoc === undefined) continue;\n        if (startLoc.latitudeE7 === undefined || startLoc.longitudeE7 === undefined) continue;\n        if (endLoc.latitudeE7 === undefined || endLoc.longitudeE7 === undefined) continue;\n        const startLat = startLoc.latitudeE7 / 10000000.0;\n        const startLong = startLoc.longitudeE7 / 10000000.0;\n        const endLat = endLoc.latitudeE7 / 10000000.0;\n        const endLong = endLoc.longitudeE7 / 10000000.0;\n        const confidence = activitySegment.confidence;\n        const activities = activitySegment.activities;\n        results.push(\n          <Polyline\n            positions={\n              [\n                { lat: startLat, lng: startLong },\n                { lat: endLat, lng: endLong },\n              ]\n            }\n          >\n            <Popup>\n              <p>Activities: {activities.map((activity: any) => activity.activityType).join(\", \")}</p>\n              <p>Confidence: {confidence}</p>\n            </Popup>\n          </Polyline>\n        );\n      }\n    }\n    return results;\n\n    // let results = [];\n    // for (const semantic of semantics) {\n    //   const timelineObjects = semantic.timelineObjects;\n    //   for (const to of timelineObjects) {\n    //     const visit = to.placeVisit;\n    //     if (visit === undefined) continue;\n\n    //     const lat = visit.centerLatE7;\n    //     const long = visit.centerLngE7;\n    //     const loc = visit.location;\n    //     results.push(\n    //       <CircleMarker radius={3} center={{ lat: lat / 10000000.0, lng: long / 10000000.0 }} >\n    //         <Popup>\n    //           <p>ID: {loc.placeId}</p>\n    //           <p>Name: {loc.name}</p>\n    //           <p>Address: {loc.address}</p>\n    //         </Popup>\n    //       </CircleMarker>\n    //     );\n    //   }\n    // }\n    // return results;\n  };\n\n  let activities: JSX.Element[] = [];\n  if (semantics.length > 0) {\n    activities = createActivityDisplays();\n    console.log(\"creating activities\");\n  }\n\n  return (\n    <section>\n\n      <Grid container spacing={0}>\n        <Grid item>\n          <Button variant=\"contained\" component=\"label\">\n            <span>Select Semantic Files</span>\n            <input type=\"file\" multiple accept=\".json\" style={{ display: \"none\" }} onChange={(event) => {\n              const files = event.currentTarget.files;\n              if (files === null || files.length < 1) return;\n              setSemanticFiles(files);\n            }} />\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" component=\"label\">\n            <span>Select History Files</span>\n            <input type=\"file\" multiple accept=\".json\" style={{ display: \"none\" }} onChange={(event) => {\n              const files = event.currentTarget.files;\n              if (files === null || files.length < 1) return;\n              setHistoryFiles(files);\n            }} />\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" component=\"label\" onClick={parse}>\n            <span>Parse</span>\n          </Button>\n        </Grid>\n      </Grid>\n\n      <div>\n        <Map center={{ lat: 0, lng: 0 }} zoom={3} style={{ height: '800px', width: '100%' }}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n          />\n\n          {activities}\n\n          {/* {semanticHistory !== undefined && (\n            semanticHistory.timelineObjects.map((obj: any, idx: number) => {\n              const segment = obj.activitySegment;\n              if (segment !== undefined) {\n                const startLoc = segment.startLocation;\n                const endLoc = segment.endLocation;\n                const confidence = segment.confidence;\n                const activities = segment.activities;\n                return (\n                  <Polyline positions={\n                    [\n                      { lat: startLoc.latitudeE7 / 10000000.0, lng: startLoc.longitudeE7 / 10000000.0 },\n                      { lat: endLoc.latitudeE7 / 10000000.0, lng: endLoc.longitudeE7 / 10000000.0 },\n                    ]\n                  }\n                  >\n                    <Popup>\n                      <p>Activities: {activities.map((activity: any) => activity.activityType).join(\", \")}</p>\n                      <p>Confidence: {confidence}</p>\n                    </Popup>\n                  </Polyline>\n                );\n              }\n              return null;\n            })\n          )} */}\n        </Map>\n      </div>\n\n    </section>\n  );\n};\n\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { HomeSection } from \"./Sections/HomeSection\";\nimport { CreateSection } from \"./Sections/CreateSection\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={HomeSection} />\n          <Route exact path=\"/create\" component={CreateSection} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}